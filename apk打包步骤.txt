uni-app打包成apk的步骤

1.android studio 创建一个空项目

2.下载hbuild打包apk的sdk

3.从sdk的HBuilder-Integrate-AS项目中拷贝libs的库到创建的android项目

4.拷贝HBuilder-Integrate-AS目录下的simpleDemo的项目中拷贝uniapp-v8-release.aar到android的libs中

5.设置导入库和必要的三方依赖库
implementation fileTree(dir: 'libs', include: ['*.aar', '*.jar'], exclude: [])
implementation "com.android.support:support-v4:28.0.0"
implementation "com.android.support:appcompat-v7:28.0.0"
implementation 'com.android.support:recyclerview-v7:28.0.0'
implementation 'com.facebook.fresco:fresco:1.13.0'
implementation "com.facebook.fresco:animated-gif:1.13.0"
implementation 'com.github.bumptech.glide:glide:4.9.0'
implementation 'com.alibaba:fastjson:1.1.46.android'

6.在主项目的moudle对应的build.gradle中配置
android{
	....
	
	aaptOptions {
	  additionalParameters '--auto-add-overlay'  
	  ignoreAssetsPattern "!.svn:!.git:.*:!CVS:!thumbs.db:!picasa.ini:!*.scc:*~"  
	}
	
}


7.在主项目的module对应的build.gradle中配置libs的包
注意：在build.gradle的最外层
repositories {
    flatDir {
        dirs 'libs'
    }
}


8.在android项目中的main目录下创建一个assets，把SDK->assets->data文件夹拷贝到刚刚创建的assets文件夹下


9.在android项目中的assets目录下创建apps文件夹

10.在hbuild中发布打包apk的资源 发行->原生app本地打包->生成本地资源。
	注意：生成的本地资源路径 项目根目录->unpackage->resouces
	
11.拷贝生成本地资源包到android项目 assets目录下的apps目录下
	注意：拷贝的资源包名和appid的名字一致
	
12.修改android项目中assets目录下的data目录下的dcloud_control.xml中的appid为拷贝过来的appid的名字，
再修改dcloud_control.xml中根节点hbuilder为：<hbuilder debug="true" syncDebug="true">

13.修改android项目的清单文件：
	1）删除原来的默认启动activity
	
	2）按xbuild官方提供的内容，拷贝以下内容到android项目的清单文件的<application>下：
		<activity
		      android:name="io.dcloud.PandoraEntry"
		      android:configChanges="orientation|keyboardHidden|keyboard|navigation"
		      android:label="@string/app_name"
		      android:launchMode="singleTask"
		      android:hardwareAccelerated="true"
		      android:theme="@style/TranslucentTheme"
		      android:screenOrientation="user"
		      android:windowSoftInputMode="adjustResize" >
		      <intent-filter>
		          <action android:name="android.intent.action.MAIN" />
		          <category android:name="android.intent.category.LAUNCHER" />
		      </intent-filter>
		  </activity>
		  <activity
		      android:name="io.dcloud.PandoraEntryActivity"
		      android:launchMode="singleTask"
		      android:configChanges="orientation|keyboardHidden|screenSize|mcc|mnc|fontScale|keyboard"
		      android:hardwareAccelerated="true"
		      android:permission="com.miui.securitycenter.permission.AppPermissionsEditor"
		      android:screenOrientation="user"
		      android:theme="@style/DCloudTheme"
		      android:windowSoftInputMode="adjustResize">
		      <intent-filter>
		          <category android:name="android.intent.category.DEFAULT" />
		          <category android:name="android.intent.category.BROWSABLE" />
		          <action android:name="android.intent.action.VIEW" />
		          <data android:scheme="h56131bcf" />
		      </intent-filter>
		  </activity>
		
	3） 配置权限  
	
14.配置android studio的编译环境
	1）检查配置android项目的gradle的编译环境，gradle>wrapper>gradle-wrapper.properties文件中的distributionUrl
		如：distributionUrl=https\://services.gradle.org/distributions/gradle-4.10.1-all.zip
	
	2）检查项目build.gradle文件中的classpath
		如：classpath "com.android.tools.build:gradle:3.2.0"
	
	3) 检查项目build.gradle文件中的repositories设置
		如：
			repositories {
			        google()
			        jcenter()
			        maven {
			            url 'https://maven.google.com/'
			            name 'Google'
			        }
			    }
	
		  
		  